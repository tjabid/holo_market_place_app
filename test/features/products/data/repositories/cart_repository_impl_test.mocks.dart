// Mocks generated by Mockito 5.4.4 from annotations
// in holo_market_place_app/test/features/products/data/repositories/cart_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:holo_market_place_app/features/products/data/datasources/cart/cart_local_datasource.dart'
    as _i7;
import 'package:holo_market_place_app/features/products/data/datasources/cart/cart_remote_datasource.dart'
    as _i4;
import 'package:holo_market_place_app/features/products/data/datasources/product/product_remote_datasource.dart'
    as _i8;
import 'package:holo_market_place_app/features/products/data/dto/cart/cart_dto.dart'
    as _i2;
import 'package:holo_market_place_app/features/products/data/dto/product_dto.dart'
    as _i3;
import 'package:holo_market_place_app/features/products/domain/entities/product/category.dart'
    as _i9;
import 'package:holo_market_place_app/features/products/domain/entities/product/product.dart'
    as _i6;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeCartDto_0 extends _i1.SmartFake implements _i2.CartDto {
  _FakeCartDto_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeProductDto_1 extends _i1.SmartFake implements _i3.ProductDto {
  _FakeProductDto_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [CartRemoteDatasource].
///
/// See the documentation for Mockito's code generation for more information.
class MockCartRemoteDatasource extends _i1.Mock
    implements _i4.CartRemoteDatasource {
  MockCartRemoteDatasource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.CartDto> getCart() => (super.noSuchMethod(
        Invocation.method(
          #getCart,
          [],
        ),
        returnValue: _i5.Future<_i2.CartDto>.value(_FakeCartDto_0(
          this,
          Invocation.method(
            #getCart,
            [],
          ),
        )),
      ) as _i5.Future<_i2.CartDto>);

  @override
  _i5.Future<void> addToCart(
    _i6.Product? product,
    int? quantity,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addToCart,
          [
            product,
            quantity,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> removeFromCart(_i6.Product? product) => (super.noSuchMethod(
        Invocation.method(
          #removeFromCart,
          [product],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> updateQuantity(
    _i6.Product? product,
    int? quantity,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateQuantity,
          [
            product,
            quantity,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> clearCart() => (super.noSuchMethod(
        Invocation.method(
          #clearCart,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}

/// A class which mocks [CartLocalDatasource].
///
/// See the documentation for Mockito's code generation for more information.
class MockCartLocalDatasource extends _i1.Mock
    implements _i7.CartLocalDatasource {
  MockCartLocalDatasource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.CartDto?> getCart() => (super.noSuchMethod(
        Invocation.method(
          #getCart,
          [],
        ),
        returnValue: _i5.Future<_i2.CartDto?>.value(),
      ) as _i5.Future<_i2.CartDto?>);

  @override
  _i5.Future<void> updateCart(_i2.CartDto? cart) => (super.noSuchMethod(
        Invocation.method(
          #updateCart,
          [cart],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> clearCart() => (super.noSuchMethod(
        Invocation.method(
          #clearCart,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}

/// A class which mocks [ProductRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockProductRemoteDataSource extends _i1.Mock
    implements _i8.ProductRemoteDataSource {
  MockProductRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<List<_i3.ProductDto>> getProducts() => (super.noSuchMethod(
        Invocation.method(
          #getProducts,
          [],
        ),
        returnValue: _i5.Future<List<_i3.ProductDto>>.value(<_i3.ProductDto>[]),
      ) as _i5.Future<List<_i3.ProductDto>>);

  @override
  _i5.Future<_i3.ProductDto> getProductById(int? id) => (super.noSuchMethod(
        Invocation.method(
          #getProductById,
          [id],
        ),
        returnValue: _i5.Future<_i3.ProductDto>.value(_FakeProductDto_1(
          this,
          Invocation.method(
            #getProductById,
            [id],
          ),
        )),
      ) as _i5.Future<_i3.ProductDto>);

  @override
  _i5.Future<List<_i3.ProductDto>> getProductsByCategory(String? category) =>
      (super.noSuchMethod(
        Invocation.method(
          #getProductsByCategory,
          [category],
        ),
        returnValue: _i5.Future<List<_i3.ProductDto>>.value(<_i3.ProductDto>[]),
      ) as _i5.Future<List<_i3.ProductDto>>);

  @override
  _i5.Future<List<_i9.Category>> getCategories() => (super.noSuchMethod(
        Invocation.method(
          #getCategories,
          [],
        ),
        returnValue: _i5.Future<List<_i9.Category>>.value(<_i9.Category>[]),
      ) as _i5.Future<List<_i9.Category>>);
}
